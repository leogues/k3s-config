global:
  extraEnvFrom:
    - secretRef:
        name: s3-credentials
  extraArgs:
    - "-config.expand-env=true"

deploymentMode: Distributed

loki:
  schemaConfig:
    configs:
      - from: "2024-04-01"
        store: tsdb
        object_store: s3
        schema: v13
        index:
          prefix: loki_index_
          period: 24h
  storage_config:
    use_thanos_objstore: true
    object_store:
      s3:
        bucket_name: "loki"
        endpoint: "88637849b2895815e424609442014ce3.r2.cloudflarestorage.com"
        access_key_id: "${R2_ACCESS_KEY_ID}"
        secret_access_key: "${R2_SECRET_ACCESS_KEY}"

  ingester:
    chunk_encoding: snappy
  pattern_ingester:
    enabled: true
  limits_config:
    allow_structured_metadata: true
    volume_enabled: true
    retention_period: 24h
  compactor:
    retention_enabled: true
    delete_request_store: s3

  querier:
    max_concurrent: 4

  storage:
    bucketNames:
      chunks: "loki"
    use_thanos_objstore: true
    object_store:
      type: s3
      s3:
        bucket_name: "loki"
        endpoint: "88637849b2895815e424609442014ce3.r2.cloudflarestorage.com"
        access_key_id: "${R2_ACCESS_KEY_ID}"
        secret_access_key: "${R2_SECRET_ACCESS_KEY}"
  # storage:
  #   type: s3
  #   bucketNames:
  #     chunks: "loki-chunks"
  #   s3:
  #     endpoint: "https://88637849b2895815e424609442014ce3.r2.cloudflarestorage.com"
  #     accessKeyId: "${R2_ACCESS_KEY_ID}"
  #     secretAccessKey: "${R2_SECRET_ACCESS_KEY}"

ingester:
  replicas: 1
  zoneAwareReplication:
    enabled: false

querier:
  replicas: 1

queryFrontend:
  replicas: 1

queryScheduler:
  replicas: 1

distributor:
  replicas: 1

compactor:
  replicas: 1

indexGateway:
  replicas: 1

ruler:
  enabled: false

chunksCache:
  allocatedMemory: 3072

backend:
  replicas: 0
read:
  replicas: 0
write:
  replicas: 0

singleBinary:
  replicas: 0
